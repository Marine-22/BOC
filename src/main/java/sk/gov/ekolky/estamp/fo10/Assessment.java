
package sk.gov.ekolky.estamp.fo10;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

import sk.posta.boc.ispep.PepConfig;



/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 *  
 */
@WebServiceClient(name = "assessment", targetNamespace = PepConfig.TARGET_NAMESPACE, wsdlLocation = PepConfig.WSDL_LOCATION)
public class Assessment
    extends Service
{

    private final static URL ASSESSMENT_WSDL_LOCATION;
    private final static Logger logger = Logger.getLogger(sk.gov.ekolky.estamp.fo10.Assessment.class.getName());

    static {
        URL url = null;
        try {
            URL baseUrl;
            baseUrl = sk.gov.ekolky.estamp.fo10.Assessment.class.getResource(".");
            url = new URL(baseUrl, PepConfig.URL);
        } catch (MalformedURLException e) {
            logger.warning("Failed to create URL for the wsdl Location: '"+PepConfig.URL+"', retrying as a local file");
            logger.warning(e.getMessage());
        }
        ASSESSMENT_WSDL_LOCATION = url;
    }

    public Assessment(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Assessment() {
        super(ASSESSMENT_WSDL_LOCATION, new QName(PepConfig.QNAME_URI, "assessment"));
    }

    /**
     * 
     * @return
     *     returns AssessmentPortType
     */
    @WebEndpoint(name = "assessment_Port")
    public AssessmentPortType getAssessmentPort() {
        return super.getPort(new QName(PepConfig.QNAME_URI, "assessment_Port"), AssessmentPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AssessmentPortType
     */
    @WebEndpoint(name = "assessment_Port")
    public AssessmentPortType getAssessmentPort(WebServiceFeature... features) {
        return super.getPort(new QName(PepConfig.QNAME_URI, "assessment_Port"), AssessmentPortType.class, features);
    }

}
